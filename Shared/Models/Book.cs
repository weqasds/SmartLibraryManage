// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace Shared.Models;

public partial class Book : IEquatable<Book>
{
    public int Bookid { get; set; }

    public string Isbn { get; set; }

    public string Title { get; set; }

    public string Author { get; set; }

    public string Publisher { get; set; }

    public DateOnly? Publishdate { get; set; }

    public string Category { get; set; }

    public decimal? Price { get; set; }

    public int Totalcopies { get; set; }

    public int Availablecopies { get; set; }

    public DateTime? Createtime { get; set; }

    public DateTime? Updatetime { get; set; }

    public virtual ICollection<Borrowrecord> Borrowrecords { get; set; } = new List<Borrowrecord>();

    public override bool Equals(object obj)
    {
        return Equals(obj as Book);
    }

    public bool Equals(Book other)
    {
        return other is not null &&
               Bookid == other.Bookid &&
               Isbn == other.Isbn &&
               Title == other.Title &&
               Author == other.Author &&
               Publisher == other.Publisher &&
               EqualityComparer<DateOnly?>.Default.Equals(Publishdate, other.Publishdate) &&
               Category == other.Category &&
               Price == other.Price &&
               Totalcopies == other.Totalcopies &&
               Availablecopies == other.Availablecopies &&
               Createtime == other.Createtime &&
               Updatetime == other.Updatetime &&
               EqualityComparer<ICollection<Borrowrecord>>.Default.Equals(Borrowrecords, other.Borrowrecords);
    }

    public override int GetHashCode()
    {
        HashCode hash = new HashCode();
        hash.Add(Bookid);
        hash.Add(Isbn);
        hash.Add(Title);
        hash.Add(Author);
        hash.Add(Publisher);
        hash.Add(Publishdate);
        hash.Add(Category);
        hash.Add(Price);
        hash.Add(Totalcopies);
        hash.Add(Availablecopies);
        hash.Add(Createtime);
        hash.Add(Updatetime);
        hash.Add(Borrowrecords);
        return hash.ToHashCode();
    }

    public static bool operator ==(Book left, Book right)
    {
        return EqualityComparer<Book>.Default.Equals(left, right);
    }

    public static bool operator !=(Book left, Book right)
    {
        return !(left == right);
    }
}