// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace Shared.Models;

public partial class User : IEquatable<User>
{
    public int Userid { get; set; }

    public string Username { get; set; }

    public string Password { get; set; }

    public string Role { get; set; }

    public string Email { get; set; }

    public string Phonenumber { get; set; }

    public DateTime? Createtime { get; set; }

    public DateTime? Updatetime { get; set; }

    public virtual ICollection<Borrowrecord> Borrowrecords { get; set; } = new List<Borrowrecord>();

    public virtual ICollection<Fine> Fines { get; set; } = new List<Fine>();

    public override bool Equals(object obj)
    {
        return Equals(obj as User);
    }

    public bool Equals(User other)
    {
        return other is not null &&
               Userid == other.Userid &&
               Username == other.Username &&
               Password == other.Password &&
               Role == other.Role &&
               Email == other.Email &&
               Phonenumber == other.Phonenumber &&
               Createtime == other.Createtime &&
               Updatetime == other.Updatetime &&
               EqualityComparer<ICollection<Borrowrecord>>.Default.Equals(Borrowrecords, other.Borrowrecords) &&
               EqualityComparer<ICollection<Fine>>.Default.Equals(Fines, other.Fines);
    }

    public override int GetHashCode()
    {
        HashCode hash = new HashCode();
        hash.Add(Userid);
        hash.Add(Username);
        hash.Add(Password);
        hash.Add(Role);
        hash.Add(Email);
        hash.Add(Phonenumber);
        hash.Add(Createtime);
        hash.Add(Updatetime);
        hash.Add(Borrowrecords);
        hash.Add(Fines);
        return hash.ToHashCode();
    }

    public static bool operator ==(User left, User right)
    {
        return EqualityComparer<User>.Default.Equals(left, right);
    }

    public static bool operator !=(User left, User right)
    {
        return !(left == right);
    }
}